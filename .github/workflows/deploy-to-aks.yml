name: AKS Deployment

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Docker Build for Products
      run: docker build -t '${{ secrets.DOCKER_LOGIN }}/githubactions-aks-demo:${{ github.sha }}' ./products

    - name: Docker Build for Shopping
      run: docker build -t '${{ secrets.DOCKER_LOGIN }}/githubactions-aks-demo:${{ github.sha }}' ./shopping

    - name: Docker Build for Customer
      run: docker build -t '${{ secrets.DOCKER_LOGIN }}/githubactions-aks-demo:${{ github.sha }}' ./customer

    - name: Docker Build for Nginx Proxy
      run: docker build -t '${{ secrets.DOCKER_LOGIN }}/githubactions-aks-demo:${{ github.sha }}' ./proxy

    - name: Docker Login
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username '${{ secrets.DOCKER_LOGIN }}' --password-stdin

    - name: Push Docker Image
      run: docker push '${{ secrets.DOCKER_LOGIN }}/githubactions-aks-demo:${{ github.sha }}'

    - name: Azure Kubernetes Set Context
      uses: Azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        resource-group: practise-aks-cluster
        cluster-name: ruwad51

    - name: Create K8s Secret
      uses: Azure/k8s-create-secret@v1.1
      with:
        container-registry-url: https://index.docker.io/v1/
        container-registry-username: '${{ secrets.DOCKER_LOGIN }}'
        container-registry-password: '${{ secrets.DOCKER_PASSWORD }}'
        secret-type: docker-registry
        secret-name: docker-image-pull-secret
        
    - name: Deploy to Kubernetes Cluster
      uses: Azure/k8s-deploy@v1
      with:        
        manifests: |
          manifests/customer.yml
          manifests/mongo-pvc.yml
          manifests/nginx-proxy.yml
          manifests/nosql-db.yml
          manifests/products.yml
          manifests/shopping.yml
        images: '${{ secrets.DOCKER_LOGIN }}/githubactions-aks-demo:${{ github.sha }}'
        imagepullsecrets: docker-image-pull-secret
        action: deploy
